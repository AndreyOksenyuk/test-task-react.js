{"version":3,"sources":["../node_modules/@ant-design/colors/lib/index.js","../node_modules/insert-css/index.js","../node_modules/@ant-design/colors/lib/generate.js","../node_modules/tinycolor2/tinycolor.js"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","generate_1","require","generate","default","presetPrimaryColors","red","volcano","orange","gold","yellow","lime","green","cyan","blue","geekblue","purple","magenta","grey","presetPalettes","keys","forEach","key","primary","containers","styleElements","insertCss","css","options","undefined","Error","styleElement","position","prepend","container","document","querySelector","containerId","indexOf","push","createElement","setAttribute","createStyleElement","insertBefore","childNodes","appendChild","charCodeAt","substr","length","styleSheet","cssText","textContent","module","tinycolor2_1","getHue","hsv","i","light","hue","Math","round","h","getSaturation","s","saturation","getValue","v","color","patterns","pColor","toHsv","colorString","toHexString","trimLeft","trimRight","tinyCounter","mathRound","mathMin","min","mathMax","max","mathRandom","random","tinycolor","opts","rgb","r","g","b","a","l","ok","format","replace","toLowerCase","match","named","names","matchers","exec","rgba","hsl","hsla","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","String","convertToPercentage","floor","f","p","q","t","hsvToRgb","hue2rgb","hslToRgb","hasOwnProperty","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","d","rgbToHsv","rgbToHex","allow3Char","hex","pad2","toString","charAt","join","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","modification","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","pow","setAlpha","toHsvString","toHslString","toHex","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","fn","args","apply","concat","slice","call","arguments","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","parms","level","size","toUpperCase","validateWCAG2Parms","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gray","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","o","flipped","flip","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","c","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","define"],"mappings":"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","file":"static/js/2.1fc021eb.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generate_1 = __importDefault(require(\"./generate\"));\nexports.generate = generate_1.default;\nvar presetPrimaryColors = {\n    red: '#F5222D',\n    volcano: '#FA541C',\n    orange: '#FA8C16',\n    gold: '#FAAD14',\n    yellow: '#FADB14',\n    lime: '#A0D911',\n    green: '#52C41A',\n    cyan: '#13C2C2',\n    blue: '#1890FF',\n    geekblue: '#2F54EB',\n    purple: '#722ED1',\n    magenta: '#EB2F96',\n    grey: '#666666',\n};\nexports.presetPrimaryColors = presetPrimaryColors;\nvar presetPalettes = {};\nexports.presetPalettes = presetPalettes;\nObject.keys(presetPrimaryColors).forEach(function (key) {\n    presetPalettes[key] = generate_1.default(presetPrimaryColors[key]);\n    presetPalettes[key].primary = presetPalettes[key][5];\n});\nvar red = presetPalettes.red;\nexports.red = red;\nvar volcano = presetPalettes.volcano;\nexports.volcano = volcano;\nvar gold = presetPalettes.gold;\nexports.gold = gold;\nvar orange = presetPalettes.orange;\nexports.orange = orange;\nvar yellow = presetPalettes.yellow;\nexports.yellow = yellow;\nvar lime = presetPalettes.lime;\nexports.lime = lime;\nvar green = presetPalettes.green;\nexports.green = green;\nvar cyan = presetPalettes.cyan;\nexports.cyan = cyan;\nvar blue = presetPalettes.blue;\nexports.blue = blue;\nvar geekblue = presetPalettes.geekblue;\nexports.geekblue = geekblue;\nvar purple = presetPalettes.purple;\nexports.purple = purple;\nvar magenta = presetPalettes.magenta;\nexports.magenta = magenta;\nvar grey = presetPalettes.grey;\nexports.grey = grey;\n","var containers = []; // will store container HTMLElement references\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction insertCss(css, options) {\n    options = options || {};\n\n    if (css === undefined) {\n        throw new Error(usage);\n    }\n\n    var position = options.prepend === true ? 'prepend' : 'append';\n    var container = options.container !== undefined ? options.container : document.querySelector('head');\n    var containerId = containers.indexOf(container);\n\n    // first time we see this container, create the necessary entries\n    if (containerId === -1) {\n        containerId = containers.push(container) - 1;\n        styleElements[containerId] = {};\n    }\n\n    // try to get the correponding container + position styleElement, create it otherwise\n    var styleElement;\n\n    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n        styleElement = styleElements[containerId][position];\n    } else {\n        styleElement = styleElements[containerId][position] = createStyleElement();\n\n        if (position === 'prepend') {\n            container.insertBefore(styleElement, container.childNodes[0]);\n        } else {\n            container.appendChild(styleElement);\n        }\n    }\n\n    // strip potential UTF-8 BOM if css was read from a file\n    if (css.charCodeAt(0) === 0xFEFF) { css = css.substr(1, css.length); }\n\n    // actually add the stylesheet\n    if (styleElement.styleSheet) {\n        styleElement.styleSheet.cssText += css\n    } else {\n        styleElement.textContent += css;\n    }\n\n    return styleElement;\n};\n\nfunction createStyleElement() {\n    var styleElement = document.createElement('style');\n    styleElement.setAttribute('type', 'text/css');\n    return styleElement;\n}\n\nmodule.exports = insertCss;\nmodule.exports.insertCss = insertCss;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tinycolor2_1 = __importDefault(require(\"tinycolor2\"));\nvar hueStep = 2; // 色相阶梯\nvar saturationStep = 16; // 饱和度阶梯，浅色部分\nvar saturationStep2 = 5; // 饱和度阶梯，深色部分\nvar brightnessStep1 = 5; // 亮度阶梯，浅色部分\nvar brightnessStep2 = 15; // 亮度阶梯，深色部分\nvar lightColorCount = 5; // 浅色数量，主色上\nvar darkColorCount = 4; // 深色数量，主色下\nfunction getHue(hsv, i, light) {\n    var hue;\n    // 根据色相不同，色相转向不同\n    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n        hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n    }\n    else {\n        hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n    }\n    if (hue < 0) {\n        hue += 360;\n    }\n    else if (hue >= 360) {\n        hue -= 360;\n    }\n    return hue;\n}\nfunction getSaturation(hsv, i, light) {\n    // grey color don't change saturation\n    if (hsv.h === 0 && hsv.s === 0) {\n        return hsv.s;\n    }\n    var saturation;\n    if (light) {\n        saturation = Math.round(hsv.s * 100) - saturationStep * i;\n    }\n    else if (i === darkColorCount) {\n        saturation = Math.round(hsv.s * 100) + saturationStep;\n    }\n    else {\n        saturation = Math.round(hsv.s * 100) + saturationStep2 * i;\n    }\n    // 边界值修正\n    if (saturation > 100) {\n        saturation = 100;\n    }\n    // 第一格的 s 限制在 6-10 之间\n    if (light && i === lightColorCount && saturation > 10) {\n        saturation = 10;\n    }\n    if (saturation < 6) {\n        saturation = 6;\n    }\n    return saturation;\n}\nfunction getValue(hsv, i, light) {\n    if (light) {\n        return Math.round(hsv.v * 100) + brightnessStep1 * i;\n    }\n    return Math.round(hsv.v * 100) - brightnessStep2 * i;\n}\nfunction generate(color) {\n    var patterns = [];\n    var pColor = tinycolor2_1.default(color);\n    for (var i = lightColorCount; i > 0; i -= 1) {\n        var hsv = pColor.toHsv();\n        var colorString = tinycolor2_1.default({\n            h: getHue(hsv, i, true),\n            s: getSaturation(hsv, i, true),\n            v: getValue(hsv, i, true),\n        }).toHexString();\n        patterns.push(colorString);\n    }\n    patterns.push(pColor.toHexString());\n    for (var i = 1; i <= darkColorCount; i += 1) {\n        var hsv = pColor.toHsv();\n        var colorString = tinycolor2_1.default({\n            h: getHue(hsv, i),\n            s: getSaturation(hsv, i),\n            v: getValue(hsv, i),\n        }).toHexString();\n        patterns.push(colorString);\n    }\n    return patterns;\n}\nexports.default = generate;\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n"],"sourceRoot":""}